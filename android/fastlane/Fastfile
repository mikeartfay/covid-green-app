# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Create new Internal Track Build"
  lane :internal_build do
    if ENV['BUILD_VERSION']
        vmat = /v(?<version>\d+.\d+.\d+.(?<build>\d+)).*/.match(ENV["BUILD_VERSION"])        
        raise "Bad build version" if vmat.nil?

        build_version = vmat[:version]
        build_number = vmat[:build].to_i
        increment_version_code(gradle_file_path: "app/build.gradle", version_code: build_number)
    else
        increment_version_code(gradle_file_path: "app/build.gradle")
    end

    gradle(task: "clean bundle build", build_type: "Release")
  end

  desc "Create new Detox Test Build"
  lane :detox_build do
    gradle(tasks: "clean app:assembleDebug app:assembleAndroidTest", flags: "-DtestBuildType=debug")
  end

  desc "Deploy a new Internal Track Build to Google Play"
  lane :internal_release do
    gradle(task: "bundle", build_type: "Release")

    upload_to_play_store(
      track: "internal",
      skip_upload_apk: true,
      release_status: "draft"
    )
  end

  # desc "Deploy a new version to the Google Play"
  # lane :deploy do
  #   increment_version_code(
  #     gradle_file_path: "app/build.gradle",
  #   )
  #   gradle(task: "clean assembleRelease")
  #   upload_to_play_store
  # end
end
